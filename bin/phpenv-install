#!/usr/bin/env bash
#
# Summary: Install a PHP version using the php-build plugin
#
# Usage: phpenv install [--ini|-i <environment>] [-v|--verbose] <version>
#        phpenv install [--ini|-i <environment>] [-v|--verbose] <definition-file>
#        phpenv install -l|--list
#        phpenv install -V|--version
#
#  -l/--list     List all available versions
#  -V/--version  Show version of php-build
#
# For detailed information on installing PHP versions with
# php-build, including a list of environment variables for adjusting
# compilation, see: https://github.com/php-build/php-build
#
set -e
[ -n "$PHPENV_DEBUG" ] && set -x

# Provide phpenv completions
if [ "$1" = "--complete" ]; then
  echo --list
  echo --version
  echo --verbose
  exec php-build --definitions
fi

usage() {
  phpenv-help install 2>/dev/null
  [ -z "$1" ] || exit "$1"
}

definitions() {
  local query="$1"
  php-build --definitions | $(type -p ggrep grep | head -1) -F "$query" || true
}

indent() {
  sed 's/^/  /'
}

if [ -z "$PHPENV_ROOT" ]; then
  PHPENV_ROOT="${HOME}/.phpenv"
fi

if [[ "$1" == '--help' ]] || [[ "$1" == '-h' ]]; then
  usage 0
fi

if [[ "$1" == '--list' ]] || [[ "$1" == '-l' ]]; then
  echo "Available versions:"
  definitions | indent
  exit
fi

if [[ "$1" == '--version' ]] || [[ "$1" == '-V' ]]; then
  exec php-build --version
fi

ENVIRONMENT="production"
if [[ "$1" == '--ini' ]] || [[ "$1" == '-i' ]]; then
  ENVIRONMENT="$2"
  shift 2
fi

if [[ "$1" == "--verbose" ]] || [[ "$1" = "-v" ]]; then
  VERBOSE=--verbose
  shift 1
fi

DEFINITION="$1"
case "$DEFINITION" in
"" | -* )
  usage 1
  ;;
esac

# Define `before_install` and `after_install` functions that allow
# phpenv plugins to register code for execution before or after
# the installation process
# note that these are distinct from user-defined scripts in
# share/php-build/{before,after}-install.d
declare -a before_hooks after_hooks

before_install() {
  local hook="$1"
  before_hooks["${#before_hooks[@]}"]="$hook"
}

after_install() {
  local hook="$1"
  after_hooks["${#after_hooks[@]}"]="$hook"
}

# run user-defined hooks defined in $PHPENV_ROOT/phpenv.d/install
# and phpenv plugin-defined hooks in $PLUGIN_ROOT/etc/phpenv.d/install
OLDIFS="$IFS"
IFS=$'\n' scripts=(`phpenv-hooks install`)
IFS="$OLDIFS"
for script in "${scripts[@]}"; do source "$script"; done


# Set VERSION_NAME from $DEFINITION, if it is not already set. Then
# compute the installation prefix
VERSION_NAME="${DEFINITION##*/}"
PREFIX="${PHPENV_ROOT}/versions/${VERSION_NAME}"


# Execute `before_install` hooks
for hook in "${before_hooks[@]}"; do eval "$hook"; done

# Invoke `php-build and record the exit status in $STATUS
STATUS=0
php-build $VERBOSE --ini "$ENVIRONMENT" "$DEFINITION" "$PREFIX" || STATUS="$?"

# Execute `after_install` hooks
for hook in "${after_hooks[@]}"; do eval "$hook"; done

# Run `phpenv-rehash` after a successful installation
if [ "$STATUS" == "0" ]; then
  phpenv rehash
fi

exit "$STATUS"
